{"version":3,"sources":["../../../../../assets/scripts/util/assets/scripts/util/NetControl.js"],"names":["netConfig","require","NetControl","_sock","events_open","connect","readyState","WebSocket","host","onmessage","onclose","onopen","send","msg","console","log","close","event","bind_event","e","f","that","bind","module","exports"],"mappings":";;;;;;AAAA;;;AAGA;AACA,IAAIA,YAAUC,QAAQ,WAAR,CAAd;AACA,IAAIC,aAAW;AACXC,WAAM,EADK,EACA;AACX;AACAC,iBAAc,EAHH;AAIXC,aAAS,mBAAY;AACjB,YAAG,KAAKF,KAAL,CAAWG,UAAX,KAAwB,CAA3B,EAA6B;AACzB;AACA;AACA,iBAAKH,KAAL,GAAa,IAAII,SAAJ,CAAcP,UAAUQ,IAAxB,CAAb;AACA,iBAAKL,KAAL,CAAWM,SAAX,GAAuB,KAAKA,SAA5B;AACA,iBAAKN,KAAL,CAAWO,OAAX,GAAqB,KAAKA,OAA1B;AACA,iBAAKP,KAAL,CAAWQ,MAAX,GAAoB,KAAKA,MAAzB;AACH;AACD,eAAO,IAAP;AACH,KAdU;;AAgBXC,UAAK,cAASC,GAAT,EAAa;AACd,aAAKV,KAAL,CAAWS,IAAX,CAAgBC,GAAhB;AACAC,gBAAQC,GAAR,CAAY,aAAWF,GAAvB;AACH,KAnBU;AAoBXG,WAAM,iBAAU;AACZF,gBAAQC,GAAR,CAAY,aAAZ;AACA,aAAKZ,KAAL,CAAWa,KAAX;AACH,KAvBU;;AAyBX;AACAN,aAAQ,iBAASO,KAAT,EAAe;AACnBH,gBAAQC,GAAR,CAAY,eAAZ;AACH,KA5BU;AA6BX;AACAJ,YAAO,gBAASM,KAAT,EAAe;AAClBH,gBAAQC,GAAR,CAAY,cAAZ;AACH,KAhCU;AAiCX;AACAN,eAAU,mBAASQ,KAAT,EAAe;AACrBH,gBAAQC,GAAR,CAAY,iBAAZ;AACH,KApCU;;AAsCX;AACAG,cAvCW,sBAuCAC,CAvCA,EAuCGC,CAvCH,EAuCMC,IAvCN,EAuCW;AAClB,YAAGF,KAAK,MAAR,EAAe;AACX,iBAAKhB,KAAL,CAAWQ,MAAX,GAAoBS,CAApB;AACH,SAFD,MAEM,IAAGD,KAAK,OAAR,EAAgB;AAClB,iBAAKhB,KAAL,CAAWO,OAAX,GAAqBU,CAArB;AACH,SAFK,MAEA,IAAGD,KAAK,SAAR,EAAkB;AACpB,iBAAKhB,KAAL,CAAWM,SAAX,GAAuBW,EAAEE,IAAF,CAAOD,IAAP,CAAvB;AACH;AACJ;AA/CU,CAAf;;AAmDAE,OAAOC,OAAP,GAAetB,UAAf","file":"NetControl.js","sourceRoot":"../../../../../assets/scripts/util","sourcesContent":["/**\n * Created by Administrator on 2018/4/17 0017.\n */\n//定义全局的变量\nvar netConfig=require('NetConfig');\nvar NetControl={\n    _sock:{},  //当前的webSocket的对象\n    // 消息事件list\n    events_open : [],\n    connect: function () {\n        if(this._sock.readyState!==1){\n            //当前接口没有打开\n            //重新连接\n            this._sock = new WebSocket(netConfig.host);\n            this._sock.onmessage = this.onmessage;\n            this._sock.onclose = this.onclose;\n            this._sock.onopen = this.onopen;\n        }\n        return this;\n    },\n\n    send:function(msg){\n        this._sock.send(msg);\n        console.log(\"send msg\"+msg);\n    },\n    close:function(){\n        console.log(\"_sock close\");\n        this._sock.close();\n    },\n\n    //事件\n    onclose:function(event){\n        console.log(\"_sock onclose\");\n    },\n    //事件\n    onopen:function(event){\n        console.log(\"_sock onopen\");\n    },\n    //事件\n    onmessage:function(event){\n        console.log(\"_sock onmessage\");\n    },\n\n    //绑定消息方法\n    bind_event(e, f, that){\n        if(e == 'open'){\n            this._sock.onopen = f;\n        }else if(e == 'close'){\n            this._sock.onclose = f;\n        }else if(e == 'message'){\n            this._sock.onmessage = f.bind(that);\n        }\n    },\n\n};\n\nmodule.exports=NetControl;"]}